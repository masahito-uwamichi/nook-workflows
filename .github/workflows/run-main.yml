name: Run main.py in Container

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  schedule: # Runs the workflow periodically
    - cron: '0 0 * * *' # Runs every day at midnight UTC

jobs:
  run-script:
    runs-on: ubuntu-latest

    services:
      docker:
        image: python:3.12
        options: --user 1001

    steps:
    - name: Set up Git
      run: |
        git config --global user.name $GITHUB_USER_NAME
        git config --global user.email $GITHUB_EMAIL
      env:
        GITHUB_USER_NAME: ${{ secrets.USER_NAME }}
        GITHUB_EMAIL: ${{ secrets.EMAIL }}
    
    - name: Create YYYY-MM branch if it does not exist
      id: create_branch
      run: |
        BRANCH_NAME=$(date +"%Y-%m")
        if ! git ls-remote --exit-code --heads origin $BRANCH_NAME; then
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
        fi
        echo "::set-output name=branch::$BRANCH_NAME"

    - name: Checkout YYYY-MM branch
      uses: actions/checkout@v2
      with:
        ref: ${{ steps.create_branch.outputs.branch }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
      
    - name: Clone nook repository
      run: git clone https://github.com/masahito-uwamichi/nook.git

    - name: Install dependencies
      working-directory: nook
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run script
      working-directory: nook
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        OUTPUT_DIR: "${{ github.workspace }}/output"
      run: |
        python main.py
        git add $OUTPUT_DIR

    - name: Commit
      working-directory: nook
      run: |
        git commit -m 'Add output files - $COMMIT_DATE'
        git tag $NEW_BRANCH_NAME
        git push origin HEAD:refs/heads/$NEW_BRANCH_NAME
      env:        
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
